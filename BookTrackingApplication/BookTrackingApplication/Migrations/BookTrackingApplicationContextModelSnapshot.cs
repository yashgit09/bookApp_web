// <auto-generated />
using BookTrackingApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookTrackingApplication.Migrations
{
    [DbContext(typeof(BookTrackingApplicationContext))]
    partial class BookTrackingApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookTrackingApplication.Models.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryTypeNameToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.HasIndex("CategoryTypeNameToken");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookTrackingApplication.Models.Category", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeCode");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BookTrackingApplication.Models.CategoryType", b =>
                {
                    b.Property<string>("NameToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NameToken");

                    b.HasIndex("CategoryTypeCode");

                    b.ToTable("CategoryType");
                });

            modelBuilder.Entity("BookTrackingApplication.Models.Book", b =>
                {
                    b.HasOne("BookTrackingApplication.Models.CategoryType", "CategoryType")
                        .WithMany("Books")
                        .HasForeignKey("CategoryTypeNameToken");

                    b.Navigation("CategoryType");
                });

            modelBuilder.Entity("BookTrackingApplication.Models.CategoryType", b =>
                {
                    b.HasOne("BookTrackingApplication.Models.Category", "Category")
                        .WithMany("CategoryTypies")
                        .HasForeignKey("CategoryTypeCode");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookTrackingApplication.Models.Category", b =>
                {
                    b.Navigation("CategoryTypies");
                });

            modelBuilder.Entity("BookTrackingApplication.Models.CategoryType", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
